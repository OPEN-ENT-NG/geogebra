export interface ResizeParams {
    lock?: {
        right?: boolean;
        left?: boolean;
        top?: boolean;
        bottom?: boolean;
        horizontal?: boolean;
        vertical?: boolean;
    };
    preserveRatio?: boolean;
    moveWithResize?: boolean;
    mouseUp?: (e: any) => void;
    extendParent?: {
        right?: boolean;
        bottom?: boolean;
    };
    thickness?: number;
}
export declare const ui: {
    getConf: () => Promise<any>;
    getCurrentThemeConf: () => Promise<any>;
    extendElement: {
        touchEvents: (element: any, params?: any) => void;
        resizable: (element: any, params: ResizeParams) => void;
        draggable: (element: any, params: {
            lock?: any;
            restrict?: any;
            tick?: any;
            dragOver?: any;
            dragOut?: any;
            allowDefault?: boolean;
            startDrag?: any;
            mouseMove?: any;
            mouseUp?: any;
            noScroll?: boolean;
        }) => void;
    };
    breakpoints: {
        wideScreen: number;
        tablette: number;
        fatMobile: number;
        smallMobile: number;
        checkMaxWidth: (size: any) => boolean;
    };
    scrollToTop: () => void;
    showLightbox: () => void;
    hideLightbox: () => void;
    updateAvatar: () => void;
    scrollToId: (id: any) => Promise<void>;
    setStyle: (stylePath: string) => void;
    extendSelector: {
        touchEvents: (selector: string, params?: any) => void;
    };
    profileColors: {
        relative: string;
        teacher: string;
        student: string;
        personnel: string;
        guest: string;
        match: (profile: any) => any;
    };
};
