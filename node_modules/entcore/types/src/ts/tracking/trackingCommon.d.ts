import { EditTrackingEvent, TrackingEvent } from "./trackingEvents";
export declare type TrackingType = "matomo" | "internal" | "multiple";
export interface TrackingParams {
    trackOnly: string[];
    doNotTrack: string[];
    detailApps: boolean;
}
export declare type TrackingApp = {
    address: string;
    name: string;
};
export declare abstract class Tracking {
    params: TrackingParams;
    initStatus: "void" | "pending" | "ready" | "failed";
    onReady: Promise<void>;
    disabled: boolean;
    protected abstract doInit(params: TrackingParams): Promise<void>;
    protected abstract doTrackEvent(event: TrackingEvent): void;
    abstract trackPage(title: string, url: string): void;
    abstract saveOptIn(): void;
    readonly isReady: boolean;
    init(params: TrackingParams): Promise<void>;
    shouldTrackCurrentApp(): boolean;
    shouldTrackEvent(eventName: string): boolean;
    trackEvent(event: TrackingEvent): void;
    trackEdition(data: {
        resourceUri?: string;
        resourceId?: string;
    }): EditTrackingEvent;
    protected getCurrentMatchingApps(): TrackingApp[];
}
