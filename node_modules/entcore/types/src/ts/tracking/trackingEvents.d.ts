export interface TrackingEvent {
    disabled?: boolean;
    type: string;
    resourceType?: string;
    date?: Date;
    matomo?: {
        action: string;
        resourceUri: string;
        value?: number;
    };
    internal?: {
        [key: string]: any;
    };
}
export declare type EditTrackingEventType = "void" | "editing" | "saving" | "success" | "fail" | "cancel";
export declare class EditTrackingEvent {
    private pushEvent;
    status: EditTrackingEventType;
    private startedAt;
    private stoppedAt;
    private finishedAt;
    private id;
    private resourceUri;
    private matomoResourceUri;
    disabled: boolean;
    constructor(data: {
        resourceUri?: string;
        resourceId?: string;
    }, pushEvent: (event: TrackingEvent) => void);
    onStart(onlyIfStopped: boolean): void;
    onStop(): void;
    onFinish(success: boolean, data?: {
        code: string;
    }): void;
    onCancel(): void;
}
