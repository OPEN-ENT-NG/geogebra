import { Subject } from "rxjs";
export declare class VideoRecorder {
    private videoFactory;
    private handleDuration;
    private stream;
    private gumVideo;
    private mediaRecorder;
    private recordMimeType;
    private recorded;
    private mode;
    constraints: MediaStreamConstraints;
    onPlayChanged: Subject<Event>;
    constructor(videoFactory: () => HTMLMediaElement, handleDuration: (event: Event) => void);
    private bindPlayEvents();
    private unbindPlayEvents();
    private videoPausePlayHandler;
    private unbindRecordEvent();
    private bindRecordEvent();
    switchCamera(id: any): Promise<void>;
    play(): void;
    private preparePlay();
    private prepareRecord();
    stopStreaming(): void;
    startStreaming(notAllowedCb?: () => void): Promise<void>;
    generateVideoId(): string;
    resume(): void;
    canStartRecording(callback: any): Promise<void>;
    startRecording(): Promise<void>;
    pause(preparePlay: boolean): void;
    stopRecording(preparePlay: boolean): void;
    getBuffer(): Blob;
    clearBuffer(prepareRecord: boolean): void;
}
