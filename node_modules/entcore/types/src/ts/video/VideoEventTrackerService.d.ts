/**
 * This utility class allows sending usage data events to the server.
 */
export declare class VideoEventTrackerService {
    videos: any[];
    /**
     * Generates a new FormData containing generic video tracking metadata :
     * - device,
     * - browser,
     * - url,
     * - app
     * @returns FormData
     */
    static asFormData(): FormData;
    /** Send a VIDEO_VIEW or VIDEO_PLAY event to the server. */
    private generateEvent(type, videoId, source);
    private onPlay(event);
    private generateViewEventFor(video);
    /**
     * Look for every <video> tag in the HTML document, and the VIDEO_VIEW and VIDEO_PLAY events.
     * If applied to an angular scope, it will auto-release the listeners and prevent memory leaks.
     * Otherwise, you must call untrackAll() to release the listeners.
     */
    trackAll($scope: any): void;
    /** Release event listeners previously put on <video> tags, @see trackAll() */
    untrackAll(): void;
}
